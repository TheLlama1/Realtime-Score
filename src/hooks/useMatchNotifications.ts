"use client";

import { useEffect } from "react";
import { auth } from "@/lib/firebase";
import { getFavoriteTeams } from "@/app/services/getFavouriteTeams";
import { getUpcomingMatches } from "@/app/services/apiFootballService"; // –°–º–µ–Ω–µ–Ω–æ –∫—ä–º API-Football
import { notifyUser } from "@/app/services/notifications";
import { onAuthStateChanged } from "firebase/auth";

const checkUpcomingMatches = async (userId: string) => {
  const favoriteTeamIds = await getFavoriteTeams(userId);
  if (favoriteTeamIds.length === 0) return;

  const matches = await getUpcomingMatches();
  const now = new Date();

  matches.forEach((match) => {
    const matchTime = new Date(match.matchTime);
    const timeDiff = (matchTime.getTime() - now.getTime()) / (1000 * 60); // –ú–∏–Ω—É—Ç–Ω–∞ —Ä–∞–∑–ª–∏–∫–∞

    if (
      (favoriteTeamIds.includes(match.homeTeamId) ||
        favoriteTeamIds.includes(match.awayTeamId)) &&
      timeDiff <= 30 &&
      timeDiff > 0
    ) {
      notifyUser(
        `üì¢ ${match.homeTeamName} —Å—Ä–µ—â—É ${match.awayTeamName} –∑–∞–ø–æ—á–≤–∞ —Å–ª–µ–¥ 30 –º–∏–Ω—É—Ç–∏!`,
        "info"
      );
    } else if (
      (favoriteTeamIds.includes(match.homeTeamId) ||
        favoriteTeamIds.includes(match.awayTeamId)) &&
      timeDiff <= 0 &&
      timeDiff > -5
    ) {
      notifyUser(
        `‚öΩ ${match.homeTeamName} —Å—Ä–µ—â—É ${match.awayTeamName} –¢–™–ö–ú–û –ó–ê–ü–û–ß–ù–ê!`,
        "warning"
      );
    } else if (
      (favoriteTeamIds.includes(match.homeTeamId) ||
        favoriteTeamIds.includes(match.awayTeamId)) &&
      timeDiff <= -5 &&
      timeDiff > -120
    ) {
      notifyUser(
        `üî• ${match.homeTeamName} —Å—Ä–µ—â—É ${match.awayTeamName} —Å–µ –∏–≥—Ä–∞–µ –≤ –º–æ–º–µ–Ω—Ç–∞!`,
        "success"
      );
    }
  });
};

export const useMatchNotifications = () => {
  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (user) => {
      if (user) {
        checkUpcomingMatches(user.uid);
      }
    });

    return () => unsubscribe();
  }, []);
};
